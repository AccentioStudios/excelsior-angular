(self.webpackChunk_accentiostudios_excelsior_angular=self.webpackChunk_accentiostudios_excelsior_angular||[]).push([[803],{"./projects/excelsior-angular/src/lib/atoms/dropdown/dropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,WithSelectedValue:()=>WithSelectedValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dropdown_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),dropdown_componentngResource=__webpack_require__("./projects/excelsior-angular/src/lib/atoms/dropdown/dropdown.component.scss?ngResource"),dropdown_componentngResource_default=__webpack_require__.n(dropdown_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),lodash=__webpack_require__("./node_modules/lodash/lodash.js"),ex_icon_component=__webpack_require__("./projects/excelsior-angular/src/lib/atoms/icon/ex-icon.component.ts");const DROPDOWN_VALUE_ACCESSOR={provide:fesm2020_forms.JU,useExisting:(0,core.forwardRef)((()=>ExDropdownComponent)),multi:!0};let ExDropdownItemComponent=class ExDropdownItemComponent{constructor(){this.onClick=new core.EventEmitter,this.onMouseEnter=new core.EventEmitter}ngOnInit(){}onOptionClick(event){this.onClick.emit(event)}onOptionMouseEnter(event){this.onMouseEnter.emit(event)}static#_=this.propDecorators={id:[{type:core.Input}],option:[{type:core.Input}],selected:[{type:core.Input}],focused:[{type:core.Input}],label:[{type:core.Input}],disabled:[{type:core.Input}],visible:[{type:core.Input}],onClick:[{type:core.Output}],onMouseEnter:[{type:core.Output}]}};ExDropdownItemComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"ex-dropdown-item",standalone:!0,imports:[common.CommonModule],template:" <li\n    [id]=\"id\"\n    (click)=\"onOptionClick($event)\"\n    (mouseenter)=\"onOptionMouseEnter($event)\"\n    [ngClass]=\"{\n      'ex-dropdown-item': true,\n      'ex-highlight': selected,\n      'ex-dropdown-item--disabled': disabled === true,\n      'ex-focus': focused,\n    }\"\n  >\n    {{ option?.label || option?.value || '' }}\n  </li>",host:{class:"ex-dropdown-p"},styles:[dropdown_componentngResource_default()]})],ExDropdownItemComponent);let ExDropdownComponent=class ExDropdownComponent{constructor(cdr){this.cdr=cdr,this.filteredOptions=[],this.emptyLabel="No results found",this.isValid=null,this.scrollHeight="200px",this.hintText=null,this.validator=value=>!0,this.options=[],this.placeholder="Select an option",this.filterValue=void 0,this.initialValue=null,this.valueChange=new core.EventEmitter,this.disabled=!1,this.selectedOption=null,this.dropdownOpen=!1,this.isFiltering=!1,this._id=this.id||this.generateUUIDv4()}ngOnInit(){if(this.initialValue){const selectedOption=this.options.find((option=>option.value===this.initialValue?.value||option.id===this.initialValue?.id));selectedOption&&(this.selectedOption=selectedOption)}this.updateFilteredOptions()}validate(){if(null!==this.selectedOption&&void 0!==this.selectedOption){if(void 0!==this.validator)return void(this.isValid=this.validator(this.selectedOption));this.isValid=!0}}generateUUIDv4(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){var r=16*Math.random()|0;return("x"==c?r:3&r|8).toString(16)}))}get haveHint(){return null!==this.hintText}filterOnChange(event){this.filterValue=event.target.value,this.isFiltering=!0,this.updateFilteredOptions()}updateFilteredOptions(){if(!this.filterValue)return this.isFiltering=!1,this.filteredOptions=this.options,this.initialValue=null,void this.cdr.detectChanges();this.filteredOptions=this.options.filter((option=>option.label?.toLowerCase().includes(this.filterValue.toLowerCase())))}toggleDropdown(){this.disabled||(this.dropdownOpen=!this.dropdownOpen)}isSelected(option){return this.selectedOption?.value===option.value}getOptionLabel(option){return option.label||option.value||""}onOptionSelect(event,option){if(!this.disabled&&!option.disabled){this.dropdownOpen=!1,this.isFiltering=!1,this.filterValue=void 0;const originalValue=(0,lodash.cloneDeep)(this.selectedOption);this.selectedOption=option,this.valueChange.emit({originalValue,value:option}),this.updateFilteredOptions(),this.initialValue=null,this.cdr.detectChanges()}}isEmpty(){return this.filterValue?0===this.filteredOptions.length:0===this.options.length}static#_=this.ctorParameters=()=>[{type:core.ChangeDetectorRef}];static#_2=this.propDecorators={emptyLabel:[{type:core.Input}],label:[{type:core.Input}],id:[{type:core.Input}],scrollHeight:[{type:core.Input}],hintText:[{type:core.Input}],validator:[{type:core.Input}],options:[{type:core.Input}],placeholder:[{type:core.Input}],initialValue:[{type:core.Input}],valueChange:[{type:core.Output}],disabled:[{type:core.Input}]}};ExDropdownComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"ex-dropdown",standalone:!0,imports:[common.CommonModule,ExDropdownItemComponent,ex_icon_component.y],template:'\n    <div class="ex-dropdown" [ngClass]="{ disabled: disabled }">\n      <label *ngIf="label && label !== \'\'" [for]="id">{{ label }}</label>\n      <div class="ex-dropdown-container" (click)="toggleDropdown()" [ngClass]="{ open: dropdownOpen === true }">\n        <div class="selected-value" [ngClass]="{ open: dropdownOpen === true }">\n          <input\n            [id]="id"\n            [disabled]="disabled"\n            [placeholder]="placeholder"\n            class="ex-dropdown-search"\n            type="text"\n            (ngBlur)="toggleDropdown()"\n            [value]="\n              initialValue?.label || initialValue?.value || selectedOption?.label || selectedOption?.value || null\n            "\n            (keyup)="filterOnChange($event)"\n          />\n          <i>\n            <ex-icon [name]="\'chevron-down\'" />\n          </i>\n        </div>\n        <ul\n          (click)="toggleDropdown()"\n          class="options-list"\n          [ngClass]="{ show: dropdownOpen === true }"\n          style="z-index: 10000;"\n        >\n          <ng-template ngFor let-option [ngForOf]="filterValue ? filteredOptions : options" let-i="index">\n            <ng-container>\n              <ex-dropdown-item\n                [id]="_id + \'_ex-dropdown-item_\' + i"\n                [option]="option"\n                [selected]="isSelected(option)"\n                [label]="getOptionLabel(option)"\n                [disabled]="option.disabled"\n                (onClick)="onOptionSelect($event, option)"\n              ></ex-dropdown-item>\n            </ng-container>\n          </ng-template>\n          <li *ngIf="filterValue && isEmpty()" class="ex-dropdown-empty-message" role="option">\n            <ng-container>\n              {{ emptyLabel }}\n            </ng-container>\n          </li>\n        </ul>\n      </div>\n      <div *ngIf="haveHint && isValid !== false" class="ex-input__hint">\n        {{ hintText }}\n      </div>\n    </div>\n  ',providers:[DROPDOWN_VALUE_ACCESSOR],changeDetection:core.ChangeDetectionStrategy.OnPush,encapsulation:core.ViewEncapsulation.ShadowDom,styles:[dropdown_componentngResource_default()]})],ExDropdownComponent);const dropdown_stories={title:"1.Atoms/Dropdown",component:ExDropdownComponent,tags:["autodocs"],argTypes:{options:{control:"object"},placeholder:{control:"text"},initialValue:{control:"object"},valueChange:{action:"selectOption"},label:{control:"text"},hintText:{control:"text"},disabled:{control:"boolean"}},args:{options:[{id:"1",label:"Option 1",value:"1",disabled:!0},{id:"2",label:"Option 2",value:"2"},{id:"3",label:"Option 3",value:"3"}],placeholder:"Select an option",label:"label",hintText:"hint text"}},Default={args:{valueChange:items=>console.log("items changed",items)},render:args=>({props:args,template:'\n    <div style="height: 220px">\n      <ex-dropdown\n      [options]="options"\n      [placeholder]="placeholder"\n      (selectOption)="selectOption($event)"\n      [label]="\'label\'"\n      [hintText]="\'hint text\'"\n      (valueChange)="valueChange"\n      ></ex-dropdown>\n    </div>\n    '})},WithSelectedValue={args:{initialValue:{id:"1",label:"Option 1",value:"1"}}},Disabled={args:{disabled:!0,initialValue:{id:"1",label:"Option 1",value:"1"}}},__namedExportsOrder=["Default","WithSelectedValue","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    valueChange: items => console.log(\'items changed\', items)\n  },\n  render: args => ({\n    props: args,\n    template: `\n    <div style="height: 220px">\n      <ex-dropdown\n      [options]="options"\n      [placeholder]="placeholder"\n      (selectOption)="selectOption($event)"\n      [label]="\'label\'"\n      [hintText]="\'hint text\'"\n      (valueChange)="valueChange"\n      ></ex-dropdown>\n    </div>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},WithSelectedValue.parameters={...WithSelectedValue.parameters,docs:{...WithSelectedValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialValue: {\n      id: '1',\n      label: 'Option 1',\n      value: '1'\n    }\n  }\n}",...WithSelectedValue.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true,\n    initialValue: {\n      id: '1',\n      label: 'Option 1',\n      value: '1'\n    }\n  }\n}",...Disabled.parameters?.docs?.source}}}},"./projects/excelsior-angular/src/lib/atoms/dropdown/dropdown.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,':host {\n  /* // Basic colors */\n  --primary-color: #17202c;\n  --secondary-color: #33465f;\n  --teriary-color: #16d9f5;\n  --error-color: #ba1a1a;\n  /* // Surface Colors */\n  --surface-color: #ffffff;\n  --surface-container: #f5f5f5;\n  --on-surface-color: #101828;\n  --on-surface-color-variant: #475467;\n  --dark-surface-color: #17202c;\n  --dark-surface-container: #1f2a3a;\n  --dark-surface-bright: #33465f;\n  --dark-surface-container-bright: #364f71;\n  --on-dark-surface-color: #ffffff;\n  --on-dark-surface-color-variant: #94969c;\n  /* // Accent Colors */\n  --on-surface-accent-color: #008ea2;\n  --on-dark-surface-accent-color: #16d9f5;\n  /* // Outline */\n  --outline-color: #d0d5dd;\n  --outline-variant-color: #eaecf0;\n  --utility-success-50: #ecfdf3;\n  --utility-success-200: #abefc6;\n  --utility-success-500: #17b26a;\n  --utility-success-700: #067647;\n  --utility-pink-50: #fdf2fa;\n  --utility-pink-200: #fcceee;\n  --utility-pink-500: #ee46bc;\n  --utility-pink-700: #c11574;\n  --utility-warning-50: #fffaeb;\n  --utility-warning-200: #fedf89;\n  --utility-warning-500: #f79009;\n  --utility-warning-700: #b54708;\n  --utility-purple-50: #f4f3ff;\n  --utility-purple-200: #d9d6fe;\n  --utility-purple-500: #7a5af8;\n  --utility-purple-700: #5925dc;\n  --utility-indigo-50: #eef4ff;\n  --utility-indigo-200: #c7d7fe;\n  --utility-indigo-500: #6172f3;\n  --utility-indigo-700: #3538cd;\n  --utility-blue-light-50: #f0f9ff;\n  --utility-blue-light-200: #b9e6fe;\n  --utility-blue-light-500: #0ba5ec;\n  --utility-blue-light-700: #026aa2;\n  --utility-error-50: #fef3f2;\n  --utility-error-200: #fecdca;\n  --utility-error-500: #f62a1b;\n  --utility-error-700: #b42318;\n  --radius-full: 9999px;\n  --radius-md: 8px;\n  --radius-xs: 4px;\n  --radius-xl: 12px;\n  --spacing-xxs: 2px;\n  --spacing-sm: 6px;\n  --spacing-xl: 16px;\n  --ex-space-none: 0;\n  --ex-space-xs: 4px;\n  --ex-space-sm: 16px;\n  --ex-space-md: 24px;\n  --ex-space-md2: 32px;\n  --ex-space-lg: 48px;\n  --ex-space-xl: 96px;\n  --button-primary-color_hover: #3e5779;\n  --button-primary-border_hover: #6941c6;\n  --bg-disabled: #f2f4f7;\n  --bg-primary: #ffffff;\n  --bg-secondary: #f9fafb;\n  --fg-quinary: #98a2b3;\n  --fg-disabled: #98a2b3;\n  --border-disabled_subtle: #eaecf0;\n  --on-disabled: #a7a7a7;\n  --shadow-xs: 0px 1px 2px 0px #1018280d;\n  --text-primary-900: #101828;\n  --text-secondary-700: #344054;\n  --text-tertiary: #475467;\n  --border-primary: #d0d5dd;\n  --border-secondary: #eaecf0;\n  --primary-color: #17202c;\n  --secondary-color: #33465f;\n  --teriary-color: #16d9f5;\n  --error-color: #ba1a1a;\n  --surface-color: #ffffff;\n  --surface-container: #f5f5f5;\n  --on-surface-color: #101828;\n  --on-surface-color-variant: #475467;\n  --dark-surface-color: #17202c;\n  --dark-surface-container: #1f2a3a;\n  --dark-surface-bright: #33465f;\n  --dark-surface-container-bright: #364f71;\n  --on-dark-surface-color: #ffffff;\n  --on-dark-surface-color-variant: #94969c;\n  --on-surface-accent-color: #008ea2;\n  --on-dark-surface-accent-color: #16d9f5;\n  --outline-color: #d0d5dd;\n  --outline-variant-color: #eaecf0;\n}\n\n* {\n  font-optical-sizing: auto;\n}\n\n.ex-dropdown {\n  box-sizing: border-box;\n  position: relative;\n  display: flex;\n  gap: 0.5rem;\n  flex-direction: column;\n}\n.ex-dropdown.disabled {\n  pointer-events: none;\n  cursor: not-allowed;\n  color: var(--fg-disabled);\n}\n.ex-dropdown.disabled .ex-dropdown-container {\n  cursor: not-allowed;\n  color: var(--fg-disabled);\n  background-color: var(--bg-disabled);\n  border-color: var(--border-disabled_subtle);\n  pointer-events: none;\n}\n.ex-dropdown.disabled input {\n  cursor: not-allowed;\n  color: var(--fg-disabled);\n  background-color: var(--bg-disabled);\n  border-color: var(--border-disabled_subtle);\n  pointer-events: none;\n}\n.ex-dropdown.disabled label {\n  color: var(--fg-disabled);\n}\n\n.ex-dropdown-item--disabled {\n  cursor: not-allowed;\n  color: var(--fg-disabled);\n  border-color: var(--border-disabled_subtle);\n  pointer-events: none;\n}\n\nlabel {\n  font-weight: 600;\n  font-size: 14px;\n  color: var(--text-secondary-700);\n}\n\n.ex-highlight {\n  background-color: var(--surface-container);\n  border-radius: var(--radius-md);\n  color: var(--on-surface-color);\n}\n\n.ex-dropdown-search {\n  all: unset;\n  width: 100%;\n  padding: 0px;\n  margin: 0px;\n  font-size: 16px;\n  box-sizing: border-box;\n}\n\n.ex-dropdown-container {\n  background-color: var(--bg-primary);\n  position: relative;\n  width: 100%;\n  border: 1px solid var(--border-primary);\n  border-radius: var(--radius-md);\n  padding: 10px 14px;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  outline: none;\n  box-sizing: border-box;\n}\n\n.ex-dropdown-container.open {\n  border-color: #007bff;\n  box-shadow: 0px 0px 0px 4px rgba(158, 119, 237, 0.2392156863);\n  box-shadow: 0px 0px 0px 4px rgba(95, 146, 226, 0.2509803922);\n}\n\n.selected-value {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: var(--text-secondary-700);\n  transition: all ease-in-out 0.2s;\n  position: relative;\n}\n\n.selected-value.open::after {\n  content: " ";\n  display: block;\n  position: absolute;\n  width: calc(100% + 14px);\n  border: solid 6px #d7e4f8;\n  border-radius: 12px;\n  min-height: 36px;\n  height: 100%;\n  top: -14px;\n  left: -13px;\n  z-index: -1;\n}\n\n.selected-value.open i {\n  transition: all ease-in-out 0.2s;\n  transform: rotate(180deg);\n}\n\n.options-list {\n  box-sizing: border-box;\n  display: none;\n  position: absolute;\n  top: calc(100% + 6px);\n  left: 0;\n  width: 100%;\n  max-height: 177px;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n  border-radius: var(--radius-md);\n  background: #fff;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  z-index: 100;\n  padding: 4px;\n}\n\n.options-list::-webkit-scrollbar-track {\n  height: 30px;\n  border-radius: 10px;\n  background-color: transparent;\n}\n\n.options-list::-webkit-scrollbar {\n  width: 12px;\n  background-color: transparent;\n}\n\n.options-list::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  background-color: var(--secondary-color);\n  border: 2px solid transparent;\n  background-clip: content-box;\n  border-radius: 10px;\n  display: block;\n  min-height: 20px;\n  max-height: 20px;\n}\n\n.options-list.show {\n  display: block;\n}\n\n.options-list li {\n  border-radius: var(--radius-md);\n  padding: 10px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.options-list li:hover {\n  background: #f0f0f0;\n}\n\n.options-list li.selected {\n  background: #007bff;\n  color: white;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);